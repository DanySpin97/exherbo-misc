Upstream: yes, backported from commit 9ba0bfcf4ebeb65c0901b2c064edf8672563d30b

From 9ba0bfcf4ebeb65c0901b2c064edf8672563d30b Mon Sep 17 00:00:00 2001
From: Ingo Ruhnke <grumbel@gmail.com>
Date: Fri, 5 Jun 2015 10:31:35 +0200
Subject: [PATCH] Removed src/lisp/getters.?pp, not used by Pingus

---
 src/lisp/getters.cpp | 42 ------------------------------
 src/lisp/getters.hpp | 61 --------------------------------------------
 2 files changed, 103 deletions(-)
 delete mode 100644 src/lisp/getters.cpp
 delete mode 100644 src/lisp/getters.hpp

diff --git a/src/lisp/getters.cpp b/src/lisp/getters.cpp
deleted file mode 100644
index 9676a1040..000000000
--- a/src/lisp/getters.cpp
+++ /dev/null
@@ -1,42 +0,0 @@
-
-#include "getters.hpp"
-
-namespace lisp
-{
-
-bool get(const Lisp* lisp, bool& val)
-{
-  if(lisp->get_type() != Lisp::TYPE_BOOL)
-    return false;
-  val = lisp->get_bool();
-  return true;
-}
-
-bool get(const Lisp* lisp, float& val)
-{
-  if(lisp->get_type() == Lisp::TYPE_INT)
-    val = static_cast<float>(lisp->get_int());
-  else if(lisp->get_type() == Lisp::TYPE_FLOAT)
-    val = lisp->get_float();
-  else
-    return false;
-  return true;
-}
-
-bool get(const Lisp* lisp, int& val)
-{
-  if(lisp->get_type() != Lisp::TYPE_INT)
-    return false;
-  val = lisp->get_int();
-  return true;
-}
-
-bool get(const Lisp* lisp, std::string& val)
-{
-  if(lisp->get_type() != Lisp::TYPE_STRING)
-    return false;
-  val = lisp->get_string();
-  return true;
-}
-
-}
diff --git a/src/lisp/getters.hpp b/src/lisp/getters.hpp
deleted file mode 100644
index d9567a3e7..000000000
--- a/src/lisp/getters.hpp
+++ /dev/null
@@ -1,61 +0,0 @@
-/** This header defines functions that assign the value of Lisp objects to
- * normal C++ datatypes.
- *
- * The get function is overloaded for a set of default datatypes. You can add
- * further overloads in your own code. The get functions return true if the
- * value could be converted and false otherwise.
- *
- * The property_get function expect a list whose values 1-n are transformed to a
- * C++ object. This is typically used from the code in the Properties class. You
- * can also write custom overloads in your code.
- */
-
-#ifndef __GETTERS_HPP__
-#define __GETTERS_HPP__
-
-#include "lisp.hpp"
-
-namespace lisp
-{
-
-bool get(const Lisp* lisp, bool& val);
-bool get(const Lisp* lisp, float& val);
-bool get(const Lisp* lisp, int& val);
-bool get(const Lisp* lisp, std::string& val);
-bool get(const Lisp* lisp, const Lisp*& val);
-
-template<typename T>
-static inline bool property_get(const Lisp* lisp, T& val)
-{  
-  if(lisp->get_list_size() != 2)
-    return false;
-  
-  const Lisp* el = lisp->get_list_elem(1);
-  return get(el, val);
-}
-
-static inline bool property_get(const Lisp* lisp, const Lisp*& val)
-{
-  val = lisp;
-  return true;
-}
-
-template<typename T>
-static inline bool property_get(const Lisp* lisp, std::vector<T>& list)
-{
-  list.clear();
-  for(size_t n = 1; n < lisp->get_list_size(); ++n) {
-    T val;
-    if(get(lisp->get_list_elem(n), val) == false) {
-      list.clear();
-      return false;
-    }
-    list.push_back(val);
-  }
-  return true;
-}
-
-}
-
-#endif
-
-- 
2.24.1

