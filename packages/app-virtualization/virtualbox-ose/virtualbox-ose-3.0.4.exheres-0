# Copyright 2009 Pierre Lejeune <superheron@gmail.com>
# Distributed under the terms of the GNU General Public License v2

SUMMARY="A family of powerful x86 virtualization products"
DESCRIPTION="VirtualBox is a powerful x86 virtualization product for enterprise as well as home use. Not only is VirtualBox an extremely feature rich, high performance product for enterprise customers, it is also the only professional solution that is freely available as Open Source Software under the terms of the GNU General Public License (GPL)."
HOMEPAGE="http://www.virtualbox.org"
MY_PNV="VirtualBox-${PV}-OSE"
DOWNLOADS="http://download.virtualbox.org/${PN}/${PV}/${MY_PNV}.tar.bz2"

LICENCES="GPL-2"
SLOT="0"
PLATFORMS="~amd64 ~x86"
MYOPTIONS="X alsa dbus opengl pulseaudio python truetype webservice wine
    webservice [[ description = [ Build VBoxWebSrv ] ]]
    wine [[ description = [ Build wine support ] ]]"

DEPENDENCIES="
    build:
        dev-util/kBuild
    build+run:
        app-cdr/cdrkit
        dev-lang/yasm[>=0.5.1]
        dev-libs/libIDL
        dev-libs/libxml2[>=2.6.26]
        dev-libs/libxslt[>=1.1.17]
        dev-libs/openssl[>=0.9.7]
        media-libs/libpng[>=1.2.5]
        net-misc/curl[>=7.15.0]
        sys-devel/dev86
        sys-libs/libcap
        sys-libs/zlib[>=1.2.1]
        sys-power/iasl
        x11-libs/libXcursor
        X?
        (
            media-libs/SDL[>=1.2.7]
            x11-libs/qt:4[>=4.4.3]
            opengl? ( x11-dri/mesa x11-libs/libXmu )
            truetype? ( media-libs/SDL_ttf[>=2.0.6] )
        )
        alsa? ( sys-sound/alsa-lib[>=1.0.6] )
        dbus? ( sys-apps/dbus sys-apps/hal )
        pulseaudio? ( media-sound/pulseaudio[>=0.9.0] )
        python? ( dev-lang/python:=[>=2.5&<3.0] )
        webservice? ( net-libs/gsoap )
        wine? ( app-emulation/wine )
"

BUGS_TO=""

WORK="${WORKBASE}/${MY_PNV/-OSE/_OSE}"

src_configure() {
    local myconf
    if optionq X; then
        optionq opengl || myconf="${myconf} --disable-opengl"
        optionq truetype || myconf="${myconf} --disable-sdl-ttf)"
    else
        myconf="${myconf} --build-headless"
    fi
    optionq alsa || myconf="${myconf} --disable-alsa"
    optionq dbus || myconf="${myconf} --disable-dbus"
    optionq pulseaudio || myconf="${myconf} --disable-pulse"
    optionq python || myconf="${myconf} --disable-python"
    optionq webservice && myconf="${myconf} --enable-webservice"
    optionq wine && myconf="${myconf} --setup-wine"
    ./configure --disable-kmods ${myconf} || die "configure failed"
}

src_compile() {
    kBuild/env.sh kmk all || die "kmk all failed"
}

src_install() {
    kBuild/env.sh kmk PATH_ROOT="/usr" PATH_INS="${IMAGE}" install || die "kmk install failed"
}
