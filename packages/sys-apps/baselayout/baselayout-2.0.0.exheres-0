# Copyright 2008 Wulf C. Krueger
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'baselayout-2.0.0.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation

require multilib

SUMMARY="Filesystem baselayout and init scripts"
HOMEPAGE="http://www.gentoo.org/"
DOWNLOADS="mirror://gentoo/${PNV}.tar.bz2"

LICENCES="GPL-2"
SLOT="0"
PLATFORMS="~amd64"
MYOPTIONS=""

DEPENDENCIES="
    post:
        sys-apps/openrc
"

src_install() {
    local libdir="lib"
    [[ ${SYMLINK_LIB} == "yes" ]] && libdir=$(get_abi_LIBDIR "${DEFAULT_ABI}")

    emake \
        OS="Linux" \
        LIB=${libdir} \
        DESTDIR="${IMAGE}" \
        install

    dodoc ChangeLog
}

pkg_preinst() {
    # Bug #217848 - Since the remap_dns_vars() called by pkg_preinst() of
    # baselayout-1.x copies all the real configs from the user's
    # /etc/conf.d into ${IMAGE}, it makes them all appear to be the default
    # versions. In order to protect them from being unmerged after this
    # upgrade, modify their timestamps.
    touch "${ROOT}"/etc/conf.d/* 2>/dev/null

    # List all the multilib libdirs in /etc/env/04multilib (only if they're
    # actually different from the normal
    if has_multilib_profile || [ $(get_libdir) != "lib" -o -n "${CONF_MULTILIBDIR}" ]; then
        local libdirs="$(get_all_libdirs)" libdirs_env= dir=
        : ${libdirs:=lib}    # it isn't that we don't trust multilib.eclass...
        for dir in ${libdirs}; do
            libdirs_env=${libdirs_env:+$libdirs_env:}/${dir}:/usr/${dir}:/usr/local/${dir}
        done

        # Special-case uglyness... For people updating from lib32 -> lib amd64
        # profiles, keep lib32 in the search path while it's around
        if has_multilib_profile && [ -d "${ROOT}"lib32 -o -d "${ROOT}"lib32 ] && ! hasq lib32 ${libdirs}; then
            libdirs_env="${libdirs_env}:/lib32:/usr/lib32:/usr/local/lib32"
        fi
        echo "LDPATH=\"${libdirs_env}\"" > "${TEMP}"/04multilib
        mkdir -p "${IMAGE}"/etc/env.d/
        cp "${TEMP}"/04multilib "${IMAGE}"/etc/env.d/
    fi

    # rc-scripts version for testing of features that *should* be present
    echo "Base System ${PV}" > "${IMAGE}"/etc/exherbo-release
}

pkg_postinst() {
    # We installed some files to /usr/share/baselayout instead of /etc to stop
    # (1) overwriting the user's settings
    # (2) screwing things up when attempting to merge files
    # (3) accidentally packaging up personal files with quickpkg
    # If they don't exist then we install them
    for x in passwd shadow group fstab ; do
        [ -e "${ROOT}etc/${x}" ] && continue
        [ -e "${ROOT}usr/share/baselayout/${x}" ] || continue
        cp -p "${ROOT}usr/share/baselayout/${x}" "${ROOT}"etc
    done

    # This is also written in pkg_preinst but we write it here so that the new
    # version is immediately in the file.
    rm -f "${ROOT}"/etc/._cfg????_exherbo-release
    local release="${PV}"
    [ "${PR}" != r0 ] && release="${release}-${PR}"
    echo "Base System ${release}" > "${ROOT}"/etc/exherbo-release

    # whine about users that lack passwords #193541
    if [[ -e ${ROOT}/etc/shadow ]] ; then
        local bad_users=$(sed -n '/^[^:]*::/s|^\([^:]*\)::.*|\1|p' "${ROOT}"/etc/shadow)
        if [[ -n ${bad_users} ]] ; then
            echo
            ewarn "The following users lack passwords!"
            ewarn ${bad_users}
        fi
    fi

    # whine about users with invalid shells #215698
    if [[ -e ${ROOT}/etc/passwd ]] ; then
        local bad_shells=$(awk -F: 'system("test -e " $7) { print $1 " - " $7}' /etc/passwd | sort)
        if [[ -n ${bad_shells} ]] ; then
            echo
            ewarn "The following users have non-existent shells!"
            ewarn "${bad_shells}"
        fi
    fi
}
