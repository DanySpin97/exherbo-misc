# Copyright 2008 Wulf C. Krueger
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'openrc-0.2.3.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation

require multilib toolchain-funcs

SUMMARY="OpenRC manages the services, startup and shutdown of a host"
HOMEPAGE="http://roy.marples.name/openrc"
DOWNLOADS="http://roy.marples.name/${PN}/${PNV}.tar.bz2
    mirror://gentoo/${PNV}.tar.bz2"

LICENCES="BSD-2"
SLOT="0"
PLATFORMS="~amd64"
MYOPTIONS="debug pam"

DEPENDENCIES="
    build+run:
        sys-apps/sysvinit[>=2.86-r1]
        sys-apps/module-init-tools[>=3.2.2-r1]
        sys-libs/glibc[>=2.5]
        sys-libs/ncurses
        pam? ( sys-libs/pam[>=0.78] )
        sys-apps/baselayout[>=2.0.0]
        !sys-fs/udev[<118-r2]
    build:
        sys-kernel/linux-headers
"

DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}/9999"
)

pkg_setup() {
    LIBDIR="lib"
    [[ "${SYMLINK_LIB}" = "yes" ]] && LIBDIR=$(get_abi_LIBDIR "${DEFAULT_ABI}")

    MAKE_ARGS="LIBNAME=${LIBDIR}"
    MAKE_ARGS+=" OS=Linux"

    export BRANDING="Exherbo Linux"
    export DEBUG=$(optionv debug)
    export MKPAM=$(optionv pam)
    export MKTERMCAP=ncurses
}

src_compile() {
    tc-export CC AR RANLIB
    emake ${MAKE_ARGS}
}

src_install() {
    emake ${MAKE_ARGS} DESTDIR="${IMAGE}" install
    gen_usr_ldscript libeinfo.so
    gen_usr_ldscript librc.so

    keepdir /"${LIBDIR}"/rc/init.d
    keepdir /"${LIBDIR}"/rc/tmp

    # Backup our default runlevels
    dodir /usr/share/"${PN}"
    mv "${IMAGE}/etc/runlevels" "${IMAGE}/usr/share/${PN}"
}

add_boot_init() {
    local initd=$1
    # if the initscript is not going to be installed and is not
    # currently installed, return
    [[ -e ${IMAGE}/etc/init.d/${initd} || -e ${ROOT}/etc/init.d/${initd} ]] \
        || return
    [[ -e ${ROOT}/etc/runlevels/boot/${initd} ]] && return
    elog "Auto-adding '${initd}' service to your boot runlevel"
    ln -snf /etc/init.d/${initd} "${ROOT}"/etc/runlevels/boot/${initd}
}

add_boot_init_mit_config() {
    local config=$1 initd=$2
    if [[ -e ${ROOT}${config} ]] ; then
        if [[ -n $(sed -e 's:#.*::' -e '/^[[:space:]]*$/d' "${ROOT}"/${config}) ]] ; then
            add_boot_init ${initd}
        fi
    fi
}

pkg_preinst() {
    local f

    # default net script is just comments, so no point in biting people
    # in the ass by accident
    mv "${IMAGE}"/etc/conf.d/net "${TEMP}"/
    [[ -e ${ROOT}/etc/conf.d/net ]] && cp "${ROOT}"/etc/conf.d/net "${TEMP}"/

    # /etc/conf.d/clock moved to /etc/conf.d/hwclock
    local clock="hwclock"

    if [[ -e ${ROOT}/etc/conf.d/clock ]] ; then
        mv "${ROOT}"/etc/conf.d/clock "${ROOT}"/etc/conf.d/${clock}
    fi
    if [[ -L ${ROOT}/etc/runlevels/boot/clock ]] ; then
        rm -f "${ROOT}"/etc/runlevels/boot/clock
        ln -snf /etc/init.d/${clock} "${ROOT}"/etc/runlevels/boot/${clock}
    fi
    if [[ -L ${ROOT}${LIBDIR}/rc/init.d/started/clock ]] ; then
        rm -f "${ROOT}${LIBDIR}"/rc/init.d/started/clock
        ln -snf /etc/init.d/${clock} "${ROOT}${LIBDIR}"/rc/init.d/started/${clock}
    fi

    # /etc/conf.d/rc is no longer used for configuration
    if [[ -e ${ROOT}/etc/conf.d/rc ]] ; then
        elog "/etc/conf.d/rc is no longer used for configuration."
        elog "Please migrate your settings to /etc/rc.conf as applicable"
        elog "and delete /etc/conf.d/rc"
    fi

    # upgrade timezone file
    if [[ -e ${ROOT}/etc/conf.d/clock && ! -e ${ROOT}/etc/timezone ]] ; then
        (
        source "${ROOT}"/etc/conf.d/clock
        [[ -n ${TIMEZONE} ]] && echo "${TIMEZONE}" > "${ROOT}"/etc/timezone
        )
    fi

    # force net init.d scripts into symlinks
    for f in "${ROOT}"/etc/init.d/net.* ; do
        [[ -e ${f} ]] || continue # catch net.* not matching anything
        [[ ${f} == *.openrc.bak ]] && continue
        if [[ ! -L ${f} ]] ; then
            elog "Moved net service '${f##*/}' to '${f##*/}.openrc.bak' to force a symlink."
            elog "You should delete '${f##*/}.openrc.bak' if you don't need it."
            mv "${f}" "${f}.openrc.bak"
            ln -snf net.lo "${f}"
        fi
    done

    # termencoding was added in 0.2.1 and needed in boot
    has_version ">=sys-apps/openrc-0.2.1" || add_boot_init termencoding

    # skip remaining migration if we already have openrc installed
    has_version sys-apps/openrc && return 0

    # baselayout boot init scripts have been split out
    for f in $(cd "${IMAGE}"/usr/share/${PN}/runlevels/boot || exit; echo *) ; do
        add_boot_init ${f}
    done

    # Try to auto-add some addons when possible
    add_boot_init_mit_config /etc/conf.d/cryptfs dmcrypt
    add_boot_init_mit_config /etc/conf.d/dmcrypt dmcrypt
    add_boot_init_mit_config /etc/mdadm.conf mdraid
    add_boot_init_mit_config /etc/evms.conf evms
    [[ -e ${ROOT}/sbin/dmsetup ]] && add_boot_init device-mapper
    [[ -e ${ROOT}/sbin/vgscan ]] && add_boot_init lvm
    elog "Add on services (such as RAID/dmcrypt/LVM/etc...) are now stand alone"
    elog "init.d scripts.  If you use such a thing, make sure you have the"
    elog "required init.d scripts added to your boot runlevel."

    # Upgrade out state for baselayout-1 users
    if [[ ! -e ${ROOT}${LIBDIR}/rc/init.d/started ]] ; then
        (
        [[ -e ${ROOT}/etc/conf.d/rc ]] && source "${ROOT}"/etc/conf.d/rc
        svcdir=${svcdir:-/var/lib/init.d}
        if [[ ! -d ${ROOT}${svcdir}/started ]] ; then
            ewarn "No state found, and no state exists"
            elog "You should reboot this host"
        else
            mkdir -p "${ROOT}${LIBDIR}/rc/init.d"
            einfo "Moving state from ${ROOT}${svcdir} to ${ROOT}${LIBDIR}/rc/init.d"
            mv "${ROOT}${svcdir}"/* "${ROOT}${LIBDIR}"/rc/init.d
            rm -rf "${ROOT}${LIBDIR}"/rc/init.d/daemons \
                "${ROOT}${LIBDIR}"/rc/init.d/console
            umount "${ROOT}${svcdir}" 2>/dev/null
            rm -rf "${ROOT}${svcdir}"
        fi
        )
    fi

    # Handle the /etc/modules.autoload.d -> /etc/conf.d/modules transition
    if [[ -d ${ROOT}/etc/modules.autoload.d ]] ; then
        elog "Converting your /etc/modules.autoload.d/ files to /etc/conf.d/modules"
        rm -f "${ROOT}"/etc/modules.autoload.d/.keep*
        rmdir "${ROOT}"/etc/modules.autoload.d 2>/dev/null
        if [[ -d ${ROOT}/etc/modules.autoload.d ]] ; then
            local f v
            for f in "${ROOT}"/etc/modules.autoload.d/* ; do
                v=${f##*/}
                v=${v#kernel-}
                v=${v//[^[:alnum:]]/_}
                gawk -v v="${v}" -v f="${f##*/}" '
                BEGIN { print "\n### START: Auto-converted from " f "\n" }
                {
                    if ($0 ~ /^[^#]/) {
                        print "modules_" v "=\"${modules_" v "} " $1 "\""
                        gsub(/[^[:alnum:]]/, "_", $1)
                        printf "module_" $1 "_args_" v "=\""
                        for (i = 2; i <= NF; ++i) {
                            if (i > 2)
                                printf " "
                            printf $i
                        }
                        print "\"\n"
                    } else
                        print
                }
                END { print "\n### END: Auto-converted from " f "\n" }
                ' "${f}" >> "${IMAGE}"/etc/conf.d/modules
            done
                rm -f "${f}"
            rmdir "${ROOT}"/etc/modules.autoload.d 2>/dev/null
        fi
    fi
}

pkg_postinst() {
    # Remove old baselayout links
    rm -f "${ROOT}"/etc/runlevels/boot/{check{fs,root},rmnologin}

    [[ -e ${TEMP}/net && ! -e ${ROOT}/etc/conf.d/net ]] && mv "${TEMP}"/net "${ROOT}"/etc/conf.d/net

    # Make our runlevels if they don't exist
    if [[ ! -e ${ROOT}/etc/runlevels ]] ; then
        einfo "Copying across default runlevels"
        cp -RPp "${ROOT}"/usr/share/${PN}/runlevels "${ROOT}"/etc
    fi

    if [[ -d ${ROOT}/etc/modules.autoload.d ]] ; then
        ewarn "/etc/modules.autoload.d is no longer used.  Please convert"
        ewarn "your files to /etc/conf.d/modules and delete the directory."
    fi

    elog "You should now update all files in /etc, using eselect config"
    elog "or equivalent before restarting any services on this host."
    elog
    elog "Please read the migration guide available at:"
    elog "http://www.gentoo.org/doc/en/openrc-migration.xml"
}
